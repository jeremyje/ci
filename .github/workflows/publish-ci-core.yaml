# Copyright 2023 Jeremy Edwards
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build CI Image

on:
  schedule:
    # https://crontab.guru/
    - cron: "53 5 * * SUN"
  push:
    tags: ["v*"]
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    timeout-minutes: 45
    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Prepare
        id: prep
        run: |
          echo "build_date=$(date -u +'%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # https://github.com/docker/login-action#github-packages-docker-registry
      - name: Login to Docker Hub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # https://docs.github.com/en/packages/managing-github-packages-using-github-actions-workflows/publishing-and-installing-a-package-with-github-actions#publishing-a-package-using-an-action
      - name: Build and Push to Docker Hub (Debian)
        uses: docker/build-push-action@v4
        with:
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          file: ./ci-core/Dockerfile.debian
          context: .
          tags: |
            docker.io/${{ github.actor }}/ci-core:canary
            docker.io/${{ github.actor }}/ci-core:${{ github.sha }}
            docker.io/${{ github.actor }}/ci-core:${{ github.run_id }}
            docker.io/${{ github.actor }}/ci-core:${{ steps.prep.outputs.build_date }}
          labels: |
            org.opencontainers.image.title=Continuous Integration (Debian)
            org.opencontainers.image.description=Continuous Integration Image (Debian)
            org.opencontainers.image.vendor=${{ github.actor }}
            org.opencontainers.image.authors=${{ github.actor }}
            org.opencontainers.image.version=${{ github.run_id }}
            org.opencontainers.image.url=${{ github.event.repository.clone_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.build_timestamp }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and Push to Docker Hub (Ubuntu)
        uses: docker/build-push-action@v4
        with:
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          file: ./ci-core/Dockerfile.ubuntu
          context: .
          tags: |
            docker.io/${{ github.actor }}/ci-core:canary-ubuntu
            docker.io/${{ github.actor }}/ci-core:${{ github.sha }}-ubuntu
            docker.io/${{ github.actor }}/ci-core:${{ github.run_id }}-ubuntu
            docker.io/${{ github.actor }}/ci-core:${{ steps.prep.outputs.build_date }}-ubuntu
          labels: |
            org.opencontainers.image.title=Continuous Integration (Ubuntu)
            org.opencontainers.image.description=Continuous Integration Image (Ubuntu)
            org.opencontainers.image.vendor=${{ github.actor }}
            org.opencontainers.image.authors=${{ github.actor }}
            org.opencontainers.image.version=${{ github.run_id }}
            org.opencontainers.image.url=${{ github.event.repository.clone_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.build_timestamp }}
            org.opencontainers.image.revision=${{ github.sha }}

      # https://github.com/docker/login-action#github-packages-docker-registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # https://github.com/docker/metadata-action#about
      - name: Docker Metadata (ghcr.io, Debian)
        id: docker-metadata-ghcr-io-debian
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/jeremyje/ci-core
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
          labels: |
            org.opencontainers.image.title=Continuous Integration (Debian)
            org.opencontainers.image.description=Continuous Integration Image (Debian)
            org.opencontainers.image.vendor=${{ github.actor }}
            org.opencontainers.image.authors=${{ github.actor }}
            org.opencontainers.image.version=${{ github.run_id }}
            org.opencontainers.image.url=${{ github.event.repository.clone_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.build_timestamp }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and Push to ghcr.io (Debian)
        uses: docker/build-push-action@v4
        with:
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          file: ./ci-core/Dockerfile.debian
          context: .
          tags: ${{ steps.docker-metadata-ghcr-io-debian.outputs.tags }}
          labels: ${{ steps.docker-metadata-ghcr-io-debian.outputs.labels }}

      - name: Docker Metadata (ghcr.io, Ubuntu)
        id: docker-metadata-ghcr-io-ubuntu
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/jeremyje/ci-core
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
          labels: |
            org.opencontainers.image.title=Continuous Integration (Ubuntu)
            org.opencontainers.image.description=Continuous Integration Image (Ubuntu)
            org.opencontainers.image.vendor=${{ github.actor }}
            org.opencontainers.image.authors=${{ github.actor }}
            org.opencontainers.image.version=${{ github.run_id }}
            org.opencontainers.image.url=${{ github.event.repository.clone_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.build_timestamp }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and Push to ghcr.io (Ubuntu)
        uses: docker/build-push-action@v4
        with:
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          file: ./ci-core/Dockerfile.ubuntu
          context: .
          tags: ${{ steps.docker-metadata-ghcr-io-ubuntu.outputs.tags }}
          labels: ${{ steps.docker-metadata-ghcr-io-ubuntu.outputs.labels }}
